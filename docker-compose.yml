services:
  authentication:
    container_name: authentication
    build:
      context: ./authentication
      dockerfile: Dockerfile
    volumes:
      - ./authentication/auth:/auth
      - ./authentication/scripts:/scripts
      - ./data/web/static:/data/web/static
      - ./data/web/media:/data/web/media 
    env_file:
      - ./dotenv_files/.env
    ports:
      - "8000:8000"
    depends_on:
      - psql
    networks:
      - Transcendence

  psql:
    container_name: psql
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./dotenv_files/.env
    networks:
      - Transcendence


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
    # - frontend_html_data:/usr/share/nginx/html 
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
      - ./data/web/media:/data/web/media 
    networks:
      - Transcendence
#  elasticsearch:
#    image: elasticsearch:8.15.1
#    ports:
#      - "9200:9200"
#  
#  logstash:
#    image: logstash:8.15.1
#    command: -f /etc/logstash/conf.d/
#    volumes:
#      - ./logstash.d:/etc/logstash/conf.d
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5000:5000"
#
#  kibana:
#    image: kibana:8.15.1
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"

volumes:
  postgres_data:
  frontend_html_data:
  data_media:

networks:
  Transcendence:
    name: transcendence
    driver: bridge


