services:
  authentication:
    container_name: authentication
    build:
      context: ./authentication
      dockerfile: Dockerfile
    volumes:
      - ./authentication/auth:/auth
      - ./authentication/scripts:/scripts
      - ./data/web/static:/data/web/static
      - ./data/web/media:/data/web/media
      - ./authentication/auth/logs:/auth/logs
    env_file:
      - ./dotenv_files/.env
    ports:
      - "8000:8000"
    depends_on:
      - psql
    networks:
      - Transcendence

  psql:
    container_name: psql
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./dotenv_files/.env
    networks:
      - Transcendence

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
      - ./logs:/var/log/nginx
    networks:
      - Transcendence

  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./elk/elastic
      dockerfile: Dockerfile
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms521m -Xmx521m"
#      - "xpack.security.enabled=false"
#      - network.host=0.0.0.0
    volumes:
      - ./elk/elastic/myssl:/myssl
#      - ./elk/elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elk/elastic/data:/usr/share/elasticsearch/data
    restart: on-failure
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - Transcendence

  logstash:
    container_name: logstash
    build:
      context: ./elk/logstash
      dockerfile: Dockerfile
    volumes:
      - ./elk/logstash/pipeline/my_pipeline.conf:/etc/logstash/conf.d/logstash.conf
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logs:/var/log/nginx
    depends_on:
      - elasticsearch
    restart: on-failure
    ports:
      - "5000:5000"
    networks:
      - Transcendence

  kibana:
    container_name: kibana
    build:
      context: ./elk/kibana
      dockerfile: Dockerfile
    volumes:
      - ./elk/kibana/config/script.sh:/script.sh
    environment:
      #- "xpack.security.encryptionKey"
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - NODE_OPTIONS=--openssl-legacy-provider
      - "xpack.encryptedSavedObjects.encryptionKey"
      - "xpack.security.enabled: true"
    depends_on:
      - elasticsearch
    restart: on-failure
    ports:
      - "5601:5601"
    networks:
      - Transcendence

volumes:
  postgres_data:

networks:
  Transcendence:
    name: transcendence
    driver: bridge
